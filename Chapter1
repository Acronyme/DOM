div class="main">
	<div class="box fl"></div>
	<div class="box fr"></div>
	<div class="center">
		<a href="#">Hi</a>
		<div id="A"></div>
		<span id="B"></span>
		<div id="C"></div>
		<div id="D"></div>
		<div id="E"></div>	
	</div>
</div>
<div class="footer"></div>

<script>
var nodeAnchor=document.querySelector("a");
for(var x in nodeAnchor){
document.write(x+"<br />")
}
document.write("<hr />")
document.write(document.querySelector("a").firstChild.nodeValue)
//创建strong元素与文本节点并添加到DOM
document.getElementById('A').innerHTML="<strong>Hi</strong>";
//创建一个div元素与文本节点替换span
document.getElementById("B").outerHTML=""+'<div id="B" class="new">whats this</div>';
//创建文本节点并用其更新div#c
document.getElementById("C").textContent="dude";
//创建文本节点并用它更新div#D  (innerText与outerText是非标准扩展)
document.getElementById("D").innerText="keep it";
//创建文本节点并用其替换div#E
document.getElementById("E").outerText="real";


●insertAdjacentHTML()方法仅在Element节点上有效，可以将节点插入到开标签之前，开标签之后、闭标签之前、闭标签之后。

var elm=document.getElementById("elm");
elm.insertAdjacentHTML('beforebegin','<span>你好</span>')；  //插入elm元素的容器外部文本的前方
elm.insertAdjacentHTML("afterbegin","<span>最近</span>");      //插入elm元素的容器内部文本的前方
elm.insertAdjacentHTML("beforeend","<span>怎么</span>");      //插入elm元素的容器内部文本后方
elm.insertAdjacentHTML("afterend","<span>样啊</span>");         //插入elm元素的容器外部文本后方

document.write()也可以用来同步创建、添加节点到DOM，但该方法会在页面加载、解析时就将传给它的值输出到页面上，会阻塞正在加载的HTML文档的解析。
insertAdjacentHTML的选项beforebegin和afterend仅在节点在DOM树中并有父节点时有效。
console.log(document.body.innerHTML);
</script>
